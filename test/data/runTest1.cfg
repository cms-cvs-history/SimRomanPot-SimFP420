process DigFP420Test = {
 ####### include services
### include "Configuration/ReleaseValidation/data/Services.cfi"

  ########## initialize  MessageLogger
 # include "FWCore/MessageLogger/data/MessageLogger.cfi"

   include "FWCore/MessageService/data/MessageLogger.cfi"
   replace MessageLogger.cerr.default.limit = 10



#        service = MessageLogger
#        { 
#	        untracked vstring destinations = {"cout"}
#		PSet cout = { PSet default = { int32 limit = 0 }}
#
#        }


#	service = MessageLogger
#	{
#      	untracked vstring destinations = {"warning.txt","error.txt","info.txt","debugmessages.txt"}
#
#      	vstring categories = {  "DigFP420Sim" }
#	vstring debugModules = { "*" }
#	PSet error.txt         = {string threshold = "ERROR"  }
#	PSet warning.txt       = {string threshold = "WARNING"}
#	PSet info.txt          = {string threshold = "INFO"  }
#      	PSet debugmessages.txt = {string threshold = "DEBUG"
#				PSet INFO     = { int32 limit = 0 }
#				PSet DEBUG    = { int32 limit = 0 }
#				PSet DigFP420Sim = { int32 limit = 1000000 }
#				}
#   	}

   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
	 untracked uint32 g4SimHits  = 11
	 untracked uint32 mix        = 12345   
      }
   }

#        service = RandomNumberGeneratorService
#        {
#        untracked uint32 sourceSeed = 135799753
#        PSet moduleSeeds =
#                {
#                 untracked uint32 VtxSmeared = 123456789
#                 untracked uint32 g4SimHits = 9876
#                }
#        }


############################################################
#The module which read from a Ntpl file
#    source = H2RootNtplSource
#    {
#    untracked vstring fileNames = {"file:edde-gb-gg.root"}
#    untracked int32 maxEvents = 100
#    untracked int32 maxEvents = -1
#    }
############################################################
         include "SimGeneral/HepPDTESSource/data/pdt.cfi"
        untracked PSet maxEvents = {untracked int32 input = 100}
        source = FlatRandomEGunSource {
                untracked PSet PGunParameters = {
                        untracked vint32 PartID = {2212}
                        untracked double MinEta = 8.7
                        untracked double MaxEta = 9.9
                        untracked double MinPhi = 3.053
                        untracked double MaxPhi = 3.227
                        untracked double MinE   = 7000.
                        untracked double MaxE   = 7000.
                }
                untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
        }
############################################################


# Vertex smearing
#
# There're 3 types of Vertex smearing module (Gauss, Flat, BeamProfile);
# the cff's are available for each one :
# Configuration/StandardSequences/data/VtxSmearedGauss.cff
# Configuration/StandardSequences/data/VtxSmearedNoSmear.cff
# Configuration/StandardSequences/data/VtxSmearedFlat.cff
# Configuration/StandardSequences/data/VtxSmearedBeamPreofile.cff
# Currently, we suggest using Gaussian vertex smearing

#        module VtxSmeared = VertexGenerator
#        {
#                string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
#                double MeanX = -2.2    // in cm
#                double MeanY = 0.      // in cm
#                double MeanZ = -2500.0  // in cm
#                double SigmaX = 0.0015
#                double SigmaY = 0.0015
#                double SigmaZ = 10.0  // in cm (as in COBRA/OSCAR)
#        }

   #
   # Note : this module takes input in the usits of *cm* !!!
   #
   #
   # 2.2 is the center in X: -1.2 - 3.2
   # -2.3 -2.1  -0.1  0.1
   # -2.8 -1.6 -0.3 0.3
   module VtxSmeared = FlatEvtVtxGenerator
   {
      double MinX =  -1.5   // in cm -2.2
      double MaxX =  -1.5   // in cm -2.2
      double MinY =  0.0   // in cm 
      double MaxY =  0.0   // in cm 
      double MinZ = 41000.   // in cm -50.   40001.
      double MaxZ = 41000.   // in cm -50.   40001.
   }
# for 2 tracks study:
#      double MinZ = -2500.   // in cm 
#      double MaxZ = -2500.   // in cm 
###############################################
#
# Seeds start
        # Vtx Smearing
#include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
#include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"
#include "Configuration/StandardSequences/data/VtxSmearedNoSmear.cff"
#include "Configuration/StandardSequences/data/VtxSmearedFlat.cff"
#include "Configuration/StandardSequences/data/VtxSmearedBeamProfile.cff"
###############################################
#



# Initialize geometry with XML files:
	#Geometry
        include "SimRomanPot/SimFP420/test/data/Test1GeometryXML.cfi"

# Initialize magnetic field: 
	#Magnetic Field
#	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
# You can set Mag Field to 0
#
#include "Configuration/StandardSequences/data/UseZeroBField.cff"



# Seeds end
#


#  include "SimRomanPot/SimFP420/data/FP420Digi.cfi"
#  include "SimRomanPot/SimFP420/data/FP420DigiWatch.cfi"
#
###############################################   
        module o1 = PoolOutputModule {untracked string fileName ="test1event.root"} 
#                                        $PWD/
##        include "SimG4Core/Application/data/g4SimHits.cfi"
        include "SimRomanPot/SimFP420/test/data/SimG4Object.cfi"

###############################################   
         replace g4SimHits.UseMagneticField = false
#         replace g4SimHits.Physics.DefaultCutValue = 10.
#          replace g4SimHits.Generator.ApplyPtCuts =  true
          replace g4SimHits.Generator.ApplyPtCuts =  false
          replace g4SimHits.Generator.ApplyPhiCuts =  true
          replace g4SimHits.Generator.ApplyEtaCuts =  false
#          replace g4SimHits.Generator.ApplyEtaCuts =  true
#          replace g4SimHits.Generator.MinEtaCut =  8.5
#         replace g4SimHits.Generator.MaxEtaCut =  9.91
###############################################   
        replace g4SimHits.Watchers = {
                        {    string type            = "DigFP420Test"
                                PSet DigFP420Test =  {
                                  int32 Verbosity     = 1
                                  string FDataLabel =  "defaultData"
                                  string FOutputFile = "TheAnalysis.root"
                                  string FRecreateFile = "RECREATE"
                 	          double z420          = 420000.0
                 	          double zD2           = 1000.0
                 	          double zD3           = 8000.0
                                  int32 NumberFP420Stations = 4
                                  int32 NumberFP420SPlanes = 9
			          double dXXFP420      =  4.7
			          double dYYFP420      =  5.0
                 	          double ElectronFP420PerAdc = 300.0
                                                       }
                            string type            = "FP420DigiMain"
                        	 PSet FP420DigiMain = {
                                    int32 Verbosity     = 1
                 	            double ElectronFP420PerAdc = 300.0
                                    double AdcFP420Threshold = 2.
                                    bool NoFP420Noise = false     
                                    bool AddNoisyPixels = true     
                 	            double z420 = 420000.0
                 	            double zD2 = 1000.0
                 	            double zD3 = 8000.0
                                                       }
                            string type            = "DigitizerFP420"
                        	 PSet DigitizerFP420 = {
                                     int32 Verbosity     = 1
                                     int32 NumberFP420Stations = 4
                                     int32 NumberFP420SPlanes = 9
                                                       }
                            string type            = "ZeroSuppressFP420"
                        	 PSet ZeroSuppressFP420 = {
                                      int32 Verbosity     = 1
                                      int32 FedFP420Algorithm = 1
                                      double FedFP420LowThreshold = 4.
                                      double FedFP420HighThreshold = 5.
                                                       }
                 	}
        }



   path p1 = {  VtxSmeared, g4SimHits }

  schedule = {p1, outpath}
 
	endpath outpath = { o1 }

	service = Timing {}
	service = Tracer {}
}		
###############################################
